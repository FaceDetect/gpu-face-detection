<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?fileVersion 4.0.0?>

<cproject storage_type_id="org.eclipse.cdt.core.XmlProjectDescriptionStorage">
	<storageModule moduleId="org.eclipse.cdt.core.settings">
		<cconfiguration id="com.nvidia.cuda.ide.configuration.so.debug.1630150374">
			<storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="com.nvidia.cuda.ide.configuration.so.debug.1630150374" moduleId="org.eclipse.cdt.core.settings" name="Debug">
				<externalSettings>
					<externalSetting>
						<entry flags="VALUE_WORKSPACE_PATH" kind="includePath" name="/gpu_obj_detection"/>
						<entry flags="VALUE_WORKSPACE_PATH" kind="libraryPath" name="/gpu_obj_detection/Debug"/>
						<entry flags="RESOLVED" kind="libraryFile" name="gpu_obj_detection"/>
					</externalSetting>
				</externalSettings>
				<extensions>
					<extension id="com.nvidia.cuda.ide.cubin" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="com.nvidia.cuda.ide.elf" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="com.nvidia.cuda.ide.macho" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="nvcc.errorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.VCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GmakeErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GCCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GASErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GLDErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
				</extensions>
			</storageModule>
			<storageModule moduleId="cdtBuildSystem" version="4.0.0">
				<configuration artifactExtension="so" artifactName="${ProjName}" buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.sharedLib" buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.debug,org.eclipse.cdt.build.core.buildArtefactType=org.eclipse.cdt.build.core.buildArtefactType.sharedLib" cleanCommand="rm -rf" description="" id="com.nvidia.cuda.ide.configuration.so.debug.1630150374" name="Debug" parent="com.nvidia.cuda.ide.configuration.so.debug">
					<folderInfo id="com.nvidia.cuda.ide.configuration.so.debug.1630150374." name="/" resourcePath="">
						<toolChain id="com.nvidia.cuda.tools.toolchain.so.debug.1655428874" name="CUDA Toolkit 5.0" superClass="com.nvidia.cuda.tools.toolchain.so.debug">
							<targetPlatform archList="all" binaryParser="com.nvidia.cuda.ide.elf;com.nvidia.cuda.ide.macho;com.nvidia.cuda.ide.cubin" id="com.nvidia.cuda.ide.targetPlatform.532812794" isAbstract="false" name="Debug Platform" osList="linux,macosx" superClass="com.nvidia.cuda.ide.targetPlatform"/>
							<builder buildPath="${workspace_loc:/gpu_obj_detection/Debug}" id="com.nvidia.cuda.ide.builder.1287797576" keepEnvironmentInBuildfile="false" managedBuildOn="true" name="CUDA Toolkit 5.0 Builder" superClass="com.nvidia.cuda.ide.builder"/>
							<tool id="nvcc.compiler.base.1493655828" name="NVCC Compiler" superClass="nvcc.compiler.base">
								<option id="nvcc.compiler.deviceDebug.966558230" name="Generate device debug information (-G)" superClass="nvcc.compiler.deviceDebug" value="false" valueType="boolean"/>
								<option id="nvcc.compiler.option.level.1004231755" name="Generate host debug information (-g)" superClass="nvcc.compiler.option.level" value="false" valueType="boolean"/>
								<option defaultValue="nvcc.compiler.optimization.level.none" id="nvcc.compiler.optimization.level.1465279667" name="Optimization Level" superClass="nvcc.compiler.optimization.level" value="nvcc.compiler.optimization.level.most" valueType="enumerated"/>
								<option id="nvcc.compiler.pic.284973816" name="Position Independent Code (-fPIC)" superClass="nvcc.compiler.pic" value="true" valueType="boolean"/>
								<option id="nvcc.compiler.include.files.1473901522" name="Include files (-include)" superClass="nvcc.compiler.include.files" valueType="includeFiles">
									<listOptionValue builtIn="false" value="/usr/local/include/undef_atomics_int128.h"/>
								</option>
								<inputType id="nvcc.compiler.input.cu.1188286953" superClass="nvcc.compiler.input.cu"/>
								<inputType id="nvcc.compiler.input.cpp.779024008" superClass="nvcc.compiler.input.cpp"/>
								<inputType id="nvcc.compiler.input.c.1656826154" superClass="nvcc.compiler.input.c"/>
							</tool>
							<tool id="nvcc.linker.base.803853680" name="NVCC Linker" superClass="nvcc.linker.base">
								<option defaultValue="true" id="nvcc.linker.option.shared.651409812" name="Shared (-shared)" superClass="nvcc.linker.option.shared" valueType="boolean"/>
								<option id="nvcc.linker.option.libs.1604298437" name="Libraries (-l)" superClass="nvcc.linker.option.libs" valueType="libs">
									<listOptionValue builtIn="false" value="opencv_core"/>
									<listOptionValue builtIn="false" value="opencv_imgproc"/>
									<listOptionValue builtIn="false" value="opencv_highgui"/>
								</option>
								<inputType id="nvcc.linker.input.1259743801" superClass="nvcc.linker.input">
									<additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
									<additionalInput kind="additionalinput" paths="$(LIBS)"/>
								</inputType>
							</tool>
							<tool id="nvcc.archiver.base.840149518" name="NVCC Archiver" superClass="nvcc.archiver.base"/>
							<tool id="com.nvidia.host.assembler.1804555219" name="Host Assembler" superClass="com.nvidia.host.assembler">
								<inputType id="cdt.managedbuild.tool.gnu.assembler.input.109576860" superClass="cdt.managedbuild.tool.gnu.assembler.input"/>
							</tool>
						</toolChain>
					</folderInfo>
				</configuration>
			</storageModule>
			<storageModule moduleId="com.nvidia.cuda.ide.build.project.ICudaProjectConfiguration">
				<executable devicelink="false">
					<sass major="1" minor="0"/>
					<ptx major="1" minor="0"/>
				</executable>
			</storageModule>
			<storageModule moduleId="org.eclipse.cdt.core.externalSettings"/>
		</cconfiguration>
		<cconfiguration id="com.nvidia.cuda.ide.configuration.so.release.355881089">
			<storageModule buildSystemId="org.eclipse.cdt.managedbuilder.core.configurationDataProvider" id="com.nvidia.cuda.ide.configuration.so.release.355881089" moduleId="org.eclipse.cdt.core.settings" name="Release">
				<externalSettings>
					<externalSetting>
						<entry flags="VALUE_WORKSPACE_PATH" kind="includePath" name="/gpu_obj_detection"/>
						<entry flags="VALUE_WORKSPACE_PATH" kind="libraryPath" name="/gpu_obj_detection/Release"/>
						<entry flags="RESOLVED" kind="libraryFile" name="gpu_obj_detection"/>
					</externalSetting>
				</externalSettings>
				<extensions>
					<extension id="com.nvidia.cuda.ide.cubin" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="com.nvidia.cuda.ide.elf" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="com.nvidia.cuda.ide.macho" point="org.eclipse.cdt.core.BinaryParser"/>
					<extension id="nvcc.errorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.VCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GmakeErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GCCErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GASErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
					<extension id="org.eclipse.cdt.core.GLDErrorParser" point="org.eclipse.cdt.core.ErrorParser"/>
				</extensions>
			</storageModule>
			<storageModule moduleId="cdtBuildSystem" version="4.0.0">
				<configuration artifactExtension="so" artifactName="${ProjName}" buildArtefactType="org.eclipse.cdt.build.core.buildArtefactType.sharedLib" buildProperties="org.eclipse.cdt.build.core.buildType=org.eclipse.cdt.build.core.buildType.release,org.eclipse.cdt.build.core.buildArtefactType=org.eclipse.cdt.build.core.buildArtefactType.sharedLib" cleanCommand="rm -rf" description="" id="com.nvidia.cuda.ide.configuration.so.release.355881089" name="Release" parent="com.nvidia.cuda.ide.configuration.so.release">
					<folderInfo id="com.nvidia.cuda.ide.configuration.so.release.355881089." name="/" resourcePath="">
						<toolChain id="com.nvidia.cuda.ide.toolchain.so.release.423767368" name="CUDA Toolkit 5.0" superClass="com.nvidia.cuda.ide.toolchain.so.release">
							<targetPlatform archList="all" binaryParser="com.nvidia.cuda.ide.elf;com.nvidia.cuda.ide.macho;com.nvidia.cuda.ide.cubin" id="com.nvidia.cuda.ide.targetPlatform.428494990" isAbstract="false" name="Debug Platform" osList="linux,macosx" superClass="com.nvidia.cuda.ide.targetPlatform"/>
							<builder buildPath="${workspace_loc:/gpu_obj_detection/Release}" id="com.nvidia.cuda.ide.builder.971941384" keepEnvironmentInBuildfile="false" managedBuildOn="true" name="CUDA Toolkit 5.0 Builder" superClass="com.nvidia.cuda.ide.builder"/>
							<tool id="nvcc.compiler.base.991614383" name="NVCC Compiler" superClass="nvcc.compiler.base">
								<option id="nvcc.compiler.deviceDebug.1880581380" name="Generate device debug information (-G)" superClass="nvcc.compiler.deviceDebug"/>
								<option id="nvcc.compiler.option.level.2073723753" name="Generate host debug information (-g)" superClass="nvcc.compiler.option.level"/>
								<option defaultValue="nvcc.compiler.optimization.level.most" id="nvcc.compiler.optimization.level.1613878483" name="Optimization Level" superClass="nvcc.compiler.optimization.level" valueType="enumerated"/>
								<option id="nvcc.compiler.pic.1151885473" name="Position Independent Code (-fPIC)" superClass="nvcc.compiler.pic" value="true" valueType="boolean"/>
								<inputType id="nvcc.compiler.input.cu.138123511" superClass="nvcc.compiler.input.cu"/>
								<inputType id="nvcc.compiler.input.cpp.2064115540" superClass="nvcc.compiler.input.cpp"/>
								<inputType id="nvcc.compiler.input.c.2127693452" superClass="nvcc.compiler.input.c"/>
							</tool>
							<tool id="nvcc.linker.base.1606232039" name="NVCC Linker" superClass="nvcc.linker.base">
								<option defaultValue="true" id="nvcc.linker.option.shared.187259282" name="Shared (-shared)" superClass="nvcc.linker.option.shared" valueType="boolean"/>
								<inputType id="nvcc.linker.input.1512871651" superClass="nvcc.linker.input">
									<additionalInput kind="additionalinputdependency" paths="$(USER_OBJS)"/>
									<additionalInput kind="additionalinput" paths="$(LIBS)"/>
								</inputType>
							</tool>
							<tool id="nvcc.archiver.base.1022970130" name="NVCC Archiver" superClass="nvcc.archiver.base"/>
							<tool id="com.nvidia.host.assembler.1850209523" name="Host Assembler" superClass="com.nvidia.host.assembler">
								<inputType id="cdt.managedbuild.tool.gnu.assembler.input.1112816196" superClass="cdt.managedbuild.tool.gnu.assembler.input"/>
							</tool>
						</toolChain>
					</folderInfo>
				</configuration>
			</storageModule>
			<storageModule moduleId="com.nvidia.cuda.ide.build.project.ICudaProjectConfiguration">
				<executable devicelink="false">
					<sass major="1" minor="0"/>
					<ptx major="1" minor="0"/>
				</executable>
			</storageModule>
			<storageModule moduleId="org.eclipse.cdt.core.externalSettings"/>
		</cconfiguration>
	</storageModule>
	<storageModule moduleId="cdtBuildSystem" version="4.0.0">
		<project id="gpu_obj_detection.com.nvidia.cuda.ide.so.1389579474" name="Shared Library" projectType="com.nvidia.cuda.ide.so"/>
	</storageModule>
	<storageModule moduleId="scannerConfiguration">
		<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId=""/>
		<scannerConfigBuildInfo instanceId="com.nvidia.cuda.ide.configuration.so.debug.1630150374;com.nvidia.cuda.ide.configuration.so.debug.1630150374.;nvcc.compiler.base.1493655828;nvcc.compiler.input.cu.1188286953">
			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId="com.nvidia.cuda.ide.build.NVCCPerProjectProfile"/>
		</scannerConfigBuildInfo>
		<scannerConfigBuildInfo instanceId="com.nvidia.cuda.ide.configuration.so.release.355881089;com.nvidia.cuda.ide.configuration.so.release.355881089.;nvcc.compiler.base.991614383;nvcc.compiler.input.c.2127693452">
			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId="com.nvidia.cuda.ide.build.NVCCPerProjectProfile"/>
		</scannerConfigBuildInfo>
		<scannerConfigBuildInfo instanceId="com.nvidia.cuda.ide.configuration.so.debug.1630150374;com.nvidia.cuda.ide.configuration.so.debug.1630150374.;nvcc.compiler.base.1493655828;nvcc.compiler.input.cpp.779024008">
			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId="com.nvidia.cuda.ide.build.NVCCPerProjectProfile"/>
		</scannerConfigBuildInfo>
		<scannerConfigBuildInfo instanceId="com.nvidia.cuda.ide.configuration.so.debug.1630150374;com.nvidia.cuda.ide.configuration.so.debug.1630150374.;nvcc.compiler.base.1493655828;nvcc.compiler.input.c.1656826154">
			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId="com.nvidia.cuda.ide.build.NVCCPerProjectProfile"/>
		</scannerConfigBuildInfo>
		<scannerConfigBuildInfo instanceId="com.nvidia.cuda.ide.configuration.so.release.355881089;com.nvidia.cuda.ide.configuration.so.release.355881089.;nvcc.compiler.base.991614383;nvcc.compiler.input.cpp.2064115540">
			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId="com.nvidia.cuda.ide.build.NVCCPerProjectProfile"/>
		</scannerConfigBuildInfo>
		<scannerConfigBuildInfo instanceId="com.nvidia.cuda.ide.configuration.so.release.355881089;com.nvidia.cuda.ide.configuration.so.release.355881089.;nvcc.compiler.base.991614383;nvcc.compiler.input.cu.138123511">
			<autodiscovery enabled="true" problemReportingEnabled="true" selectedProfileId="com.nvidia.cuda.ide.build.NVCCPerProjectProfile"/>
		</scannerConfigBuildInfo>
	</storageModule>
	<storageModule moduleId="refreshScope"/>
</cproject>
